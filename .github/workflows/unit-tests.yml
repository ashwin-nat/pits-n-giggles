name: Unit Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  test-windows:
    name: Unit Tests (Windows)
    runs-on: windows-latest

    defaults:
      run:
        shell: bash  # ensures POSIX-style shell

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
            python -m pip install --upgrade pip
            curl -sSL https://install.python-poetry.org | python -
            if [ "$RUNNER_OS" = "Windows" ]; then
            echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH
            else
            echo "$HOME/.local/bin" >> $GITHUB_PATH
            fi
        shell: bash

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
        shell: bash

      - name: Run unit tests
        run: poetry run python tests/unit_tests.py

  test-macos:
    name: Unit Tests (macOS)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
            python -m pip install --upgrade pip
            curl -sSL https://install.python-poetry.org | python -
            if [ "$RUNNER_OS" = "Windows" ]; then
            echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH
            else
            echo "$HOME/.local/bin" >> $GITHUB_PATH
            fi
        shell: bash

      - name: Install dependencies
        run: |
          poetry install --no-root
        shell: bash

      - name: Run unit tests
        run: poetry run python tests/unit_tests.py
